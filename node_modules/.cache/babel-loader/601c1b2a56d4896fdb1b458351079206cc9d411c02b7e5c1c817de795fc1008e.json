{"ast":null,"code":"var _jsxFileName = \"/data/data/com.termux/files/home/ProfitPilotFrontend/src/AdminRoute.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Navigate, Outlet } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminRoute = () => {\n  _s();\n  const token = localStorage.getItem(\"token\");\n  const [isAdmin, setIsAdmin] = useState(null);\n  useEffect(() => {\n    const checkAdmin = async () => {\n      try {\n        const res = await axios.get(\"https://profitpilot-backend.onrender.com/api/auth/me\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setIsAdmin(res.data.email === \"larryryh76@gmail.com\");\n      } catch (err) {\n        setIsAdmin(false);\n      }\n    };\n    if (token) checkAdmin();else setIsAdmin(false);\n  }, [token]);\n  if (isAdmin === null) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 32\n  }, this);\n  return isAdmin ? /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 20\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\",\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 33\n  }, this);\n};\n_s(AdminRoute, \"3/HhAYKVYmHOMfn/8alF9nuU6zI=\");\n_c = AdminRoute;\nexport default AdminRoute;\nvar _c;\n$RefreshReg$(_c, \"AdminRoute\");","map":{"version":3,"names":["React","useEffect","useState","Navigate","Outlet","axios","jsxDEV","_jsxDEV","AdminRoute","_s","token","localStorage","getItem","isAdmin","setIsAdmin","checkAdmin","res","get","headers","Authorization","data","email","err","children","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","_c","$RefreshReg$"],"sources":["/data/data/com.termux/files/home/ProfitPilotFrontend/src/AdminRoute.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Navigate, Outlet } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst AdminRoute = () => {\n  const token = localStorage.getItem(\"token\");\n  const [isAdmin, setIsAdmin] = useState(null);\n\n  useEffect(() => {\n    const checkAdmin = async () => {\n      try {\n        const res = await axios.get(\"https://profitpilot-backend.onrender.com/api/auth/me\", {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        setIsAdmin(res.data.email === \"larryryh76@gmail.com\");\n      } catch (err) {\n        setIsAdmin(false);\n      }\n    };\n    if (token) checkAdmin();\n    else setIsAdmin(false);\n  }, [token]);\n\n  if (isAdmin === null) return <div>Loading...</div>;\n  return isAdmin ? <Outlet /> : <Navigate to=\"/login\" replace />;\n};\n\nexport default AdminRoute;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AACnD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMc,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,sDAAsD,EAAE;UAClFC,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUT,KAAK;UAChC;QACF,CAAC,CAAC;QACFI,UAAU,CAACE,GAAG,CAACI,IAAI,CAACC,KAAK,KAAK,sBAAsB,CAAC;MACvD,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZR,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IACD,IAAIJ,KAAK,EAAEK,UAAU,CAAC,CAAC,CAAC,KACnBD,UAAU,CAAC,KAAK,CAAC;EACxB,CAAC,EAAE,CAACJ,KAAK,CAAC,CAAC;EAEX,IAAIG,OAAO,KAAK,IAAI,EAAE,oBAAON,OAAA;IAAAgB,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAClD,OAAOd,OAAO,gBAAGN,OAAA,CAACH,MAAM;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,gBAAGpB,OAAA,CAACJ,QAAQ;IAACyB,EAAE,EAAC,QAAQ;IAACC,OAAO;EAAA;IAAAL,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAChE,CAAC;AAAClB,EAAA,CAvBID,UAAU;AAAAsB,EAAA,GAAVtB,UAAU;AAyBhB,eAAeA,UAAU;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}